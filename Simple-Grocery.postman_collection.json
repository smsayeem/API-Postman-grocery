{
	"info": {
		"_postman_id": "1bf1dcc3-094a-4d03-8f0b-65bd0c7a6bb2",
		"name": "Simple-Grocery",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27414440",
		"_collection_link": "https://grey-comet-8085.postman.co/workspace/c57501b7-974a-47f8-9ae0-737ffd231185/collection/27414440-1bf1dcc3-094a-4d03-8f0b-65bd0c7a6bb2?action=share&source=collection_link&creator=27414440"
	},
	"item": [
		{
			"name": "Happy path",
			"item": [
				{
					"name": "API Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", ()=> {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/status",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"status"
							],
							"query": [
								{
									"key": "category",
									"value": "candy",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Register a new client",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"clientName\": \"simple grocery\",\n   \"clientEmail\": \"sadot@example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/api-clients",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api-clients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", ()=> {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/products",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "category",
									"value": "candy",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all products with param",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const response = pm.response.json();",
									"",
									"pm.test(\"At least one product is exists\",()=>{",
									"    pm.expect(response).to.be.an(\"array\");",
									"    pm.expect(response.length).to.be.above(0);",
									"    const product = response[0];",
									"    ",
									"    pm.expect(product).to.haveOwnProperty(\"id\");",
									"    pm.expect(product.id).to.be.a(\"number\");",
									"    pm.expect(product).to.haveOwnProperty(\"inStock\");",
									"    pm.expect(product.inStock).to.be.true;",
									"",
									"    pm.collectionVariables.set(\"productId\", product.id);",
									"",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/products?category=candy&results=2&available=true",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "category",
									"value": "candy"
								},
								{
									"key": "results",
									"value": "2"
								},
								{
									"key": "available",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"const response = pm.response.json();",
									"",
									"pm.test(\"Product is an object\", ()=>{",
									"    pm.expect(response).to.be.an(\"object\");",
									"})",
									"pm.test(\"Product name\", ()=>{",
									"    pm.expect(response.name).to.be.a(\"string\");",
									"})",
									"pm.test(\"product price is a number and positive\", ()=>{",
									"    pm.expect(response.price).to.be.a(\"number\");",
									"    pm.expect(response.price).to.be.above(0);",
									"})",
									"pm.test(\"Product availability\",()=>{",
									"    pm.expect(response.inStock).to.eql(true);",
									"    //pm.expect(response.inStock).to.be.true;",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/products/:productId",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"products",
								":productId"
							],
							"query": [
								{
									"key": "available",
									"value": "true",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "productId",
									"value": "{{productId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/carts",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"carts"
							],
							"query": [
								{
									"key": "available",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/carts/:cartId",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"carts",
								":cartId"
							],
							"query": [
								{
									"key": "available",
									"value": "true",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "cartId",
									"value": "ZPScGujdoqb0OdbKk4jgp"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get cart Items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/carts/:cartId/items",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"carts",
								":cartId",
								"items"
							],
							"query": [
								{
									"key": "available",
									"value": "true",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "cartId",
									"value": "ZPScGujdoqb0OdbKk4jgp"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add item to the Cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productId\": 4643,\n    \"quantity\":1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/carts/:cartId/items",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"carts",
								":cartId",
								"items"
							],
							"query": [
								{
									"key": "available",
									"value": "true",
									"disabled": true
								},
								{
									"key": "productId",
									"value": "5851",
									"disabled": true
								},
								{
									"key": "quantity",
									"value": "2",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "cartId",
									"value": "ZPScGujdoqb0OdbKk4jgp"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update cart item by quantity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"quantity\":2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/carts/:cartId/items/:itemId",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"carts",
								":cartId",
								"items",
								":itemId"
							],
							"query": [
								{
									"key": "available",
									"value": "true",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "cartId",
									"value": "ZPScGujdoqb0OdbKk4jgp"
								},
								{
									"key": "itemId",
									"value": "825580506"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Replace an item in the cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productId\": \"1225\",\n    \"quantity\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/carts/:cartId/items/:itemId",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"carts",
								":cartId",
								"items",
								":itemId"
							],
							"query": [
								{
									"key": "available",
									"value": "true",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "cartId",
									"value": "ZPScGujdoqb0OdbKk4jgp"
								},
								{
									"key": "itemId",
									"value": "462296981"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an item from the cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/carts/:cartId/items/:itemId",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"carts",
								":cartId",
								"items",
								":itemId"
							],
							"query": [
								{
									"key": "available",
									"value": "true",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "cartId",
									"value": "ZPScGujdoqb0OdbKk4jgp"
								},
								{
									"key": "itemId",
									"value": "462296981"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cartId\": \"ZPScGujdoqb0OdbKk4jgp\",\n    \"customerName\": \"Sara\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/orders",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"orders"
							],
							"query": [
								{
									"key": "available",
									"value": "true",
									"disabled": true
								},
								{
									"key": "productId",
									"value": "5851",
									"disabled": true
								},
								{
									"key": "quantity",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/orders",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"orders"
							],
							"query": [
								{
									"key": "available",
									"value": "true",
									"disabled": true
								},
								{
									"key": "productId",
									"value": "5851",
									"disabled": true
								},
								{
									"key": "quantity",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/orders/:orderId",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"orders",
								":orderId"
							],
							"query": [
								{
									"key": "available",
									"value": "true",
									"disabled": true
								},
								{
									"key": "productId",
									"value": "5851",
									"disabled": true
								},
								{
									"key": "quantity",
									"value": "2",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "orderId",
									"value": "0PztBKnF-zx4iplqGF3ik"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customerName\": \"Sara Sadot\",\n    \"comment\": \"I love you daddy\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/orders/:orderId",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"orders",
								":orderId"
							],
							"query": [
								{
									"key": "available",
									"value": "true",
									"disabled": true
								},
								{
									"key": "productId",
									"value": "5851",
									"disabled": true
								},
								{
									"key": "quantity",
									"value": "2",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "orderId",
									"value": "V0kRHpGGs5tTIYOdNb_ru"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/orders/:orderId",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"orders",
								":orderId"
							],
							"query": [
								{
									"key": "available",
									"value": "true",
									"disabled": true
								},
								{
									"key": "productId",
									"value": "5851",
									"disabled": true
								},
								{
									"key": "quantity",
									"value": "2",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "orderId",
									"value": "V0kRHpGGs5tTIYOdNb_ru"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Negative tests",
			"item": [
				{
					"name": "Missing authentication",
					"item": [
						{
							"name": "Missing Header auth token",
							"item": [
								{
									"name": "Create an order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cartId\": \"ZPScGujdoqb0OdbKk4jgp\",\n    \"customerName\": \"Sara\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BaseUrl}}/orders",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"orders"
											],
											"query": [
												{
													"key": "available",
													"value": "true",
													"disabled": true
												},
												{
													"key": "productId",
													"value": "5851",
													"disabled": true
												},
												{
													"key": "quantity",
													"value": "2",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get All orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/orders",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"orders"
											],
											"query": [
												{
													"key": "available",
													"value": "true",
													"disabled": true
												},
												{
													"key": "productId",
													"value": "5851",
													"disabled": true
												},
												{
													"key": "quantity",
													"value": "2",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Missing Authorization header\",()=>{",
											"    const response = pm.response.json();",
											"    pm.expect(response.error).to.eql(\"Missing Authorization header.\")",
											"})"
										]
									}
								}
							]
						},
						{
							"name": "Invalid header token",
							"item": [
								{
									"name": "Create an order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer a57554142500479b952801de39fdaec3bcb30b94a2081078bd1bd98966e9578b",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cartId\": \"ZPScGujdoqb0OdbKk4jgp\",\n    \"customerName\": \"Sara\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BaseUrl}}/orders",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"orders"
											],
											"query": [
												{
													"key": "available",
													"value": "true",
													"disabled": true
												},
												{
													"key": "productId",
													"value": "5851",
													"disabled": true
												},
												{
													"key": "quantity",
													"value": "2",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get All orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer a57554142500479b952801de39fdaec3bcb30b94a2081078bd1bd98966e9578b",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseUrl}}/orders",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"orders"
											],
											"query": [
												{
													"key": "available",
													"value": "true",
													"disabled": true
												},
												{
													"key": "productId",
													"value": "5851",
													"disabled": true
												},
												{
													"key": "quantity",
													"value": "2",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Invalid bearer token\",()=>{",
											"    const response = pm.response.json();",
											"    pm.expect(response.error).to.eql(\"Invalid bearer token.\")",
											"})"
										]
									}
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Boundary value",
					"item": [
						{
							"name": "Invalid input",
							"item": [
								{
									"name": "Get all products-invalid category",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"pm.test(\"Invalid category\", ()=> {",
													"    const response = pm.response.json();",
													"    pm.expect(response.error).to.have.string(\"Invalid value for query parameter 'category'.\");",
													"}); "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/products?category=candy-invalid&results=2&available=true",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"products"
											],
											"query": [
												{
													"key": "category",
													"value": "candy-invalid"
												},
												{
													"key": "results",
													"value": "2"
												},
												{
													"key": "available",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all products-result < minimum",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"pm.test(\"Invalid maximum results\", ()=> {",
													"    const response = pm.response.json();",
													"    pm.expect(response.error).to.have.string(\"Invalid value for query parameter 'results'. Must be greater than 0.\");",
													"}); "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/products?category=candy&results=-2&available=true",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"products"
											],
											"query": [
												{
													"key": "category",
													"value": "candy"
												},
												{
													"key": "results",
													"value": "-2"
												},
												{
													"key": "available",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all products-result > minimum",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"pm.test(\"Invalid maximum results\", ()=> {",
													"    const response = pm.response.json();",
													"    pm.expect(response.error).to.have.string(\"Invalid value for query parameter 'results'. Must be greater than 0.\");",
													"}); "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/products?category=candy&results=21&available=true",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"products"
											],
											"query": [
												{
													"key": "category",
													"value": "candy"
												},
												{
													"key": "results",
													"value": "21"
												},
												{
													"key": "available",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all products-result = 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"pm.test(\"Invalid maximum results\", ()=> {",
													"    const response = pm.response.json();",
													"    pm.expect(response.error).to.have.string(\"Invalid value for query parameter 'results'. Must be greater than 0.\");",
													"}); "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/products?category=candy&results=0&available=true",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"products"
											],
											"query": [
												{
													"key": "category",
													"value": "candy"
												},
												{
													"key": "results",
													"value": "0"
												},
												{
													"key": "available",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BaseUrl",
			"value": "https://simple-grocery-store-api.glitch.me",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "productId",
			"value": "",
			"type": "string"
		},
		{
			"key": "cartId",
			"value": "",
			"type": "string"
		},
		{
			"key": "orderId",
			"value": "",
			"type": "string"
		},
		{
			"key": "itemId",
			"value": "",
			"type": "string"
		}
	]
}